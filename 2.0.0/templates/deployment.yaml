apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: {{ .Values.propietario }}
  creationTimestamp: null
  generation: 1
  labels:
    aplicaciones: {{ .Values.aplicaciones}}
    app: {{ .Values.nameOverride }}
  name: {{ .Values.nameOverride }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: "deployment-default-{{ .Values.nameOverride }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: "deployment-default-{{ .Values.nameOverride }}"
        aplicaciones: {{ .Values.aplicaciones}}
        app: {{ .Values.nameOverride }}
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: Always
        name: {{ .Values.nameOverride }}
        env:
          - name: POSTGRES_DB
            value: {{ default "" .Values.POSTGRES_DB | quote }}
          - name: POSTGRES_PASSWORD
            value: {{ default "" .Values.POSTGRES_PASSWORD | quote }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: {{ .Values.nameOverride }}
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: {{ .Values.volumenes.rutaMontaje }}
          name: "vol01"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: "v-{{ .Values.nameOverride }}"
        persistentVolumeClaim:
          claimName: "v-{{ .Values.nameOverride }}"
status: {}